package comm

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _mysql_000001_gokins_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xcd\x4a\x04\x31\x0c\xc0\xf1\xbb\x4f\xd1\xf7\xd8\x93\xe2\x0a\x0b\x82\xe2\xee\xc1\x5b\x26\x76\x33\x25\x4c\xbf\x48\xd3\x81\x79\x7b\x19\x41\xf6\x96\xce\xf9\xff\xa3\x24\xe9\xeb\xd7\xc7\xa7\xbb\x3d\xbf\xbc\x9f\xdd\xe5\xcd\x9d\xbf\x2f\xd7\xdb\xd5\x4d\x0a\x28\xca\x33\x7a\x85\x8a\x7e\xc1\x40\xd3\xe9\x69\x48\x57\x92\xc6\x25\x1f\xa0\x45\x36\x43\xfd\x74\x8e\x77\xa3\xfb\x74\x87\xc8\xd9\x9a\xa9\xa9\x3d\x73\x53\xaa\x46\x56\xe1\x10\x48\xc6\x02\xa4\x5b\xfb\x26\x6a\xcd\x1e\xa4\x48\xb0\x2b\x54\xae\xd6\x03\x7b\x1e\x1c\xe3\x9f\x80\x2f\x79\x3e\xe2\x56\xb4\x56\x7f\xb0\xe1\x7f\x57\x14\x4c\x46\xef\xcd\x3c\xf2\x9e\x81\xf3\x5c\x46\xc6\xbe\xe2\x1f\x49\x6d\x48\xb4\x2c\x64\x6d\xb3\xa5\x08\x35\xf6\xc0\x23\xa4\x94\x6a\x44\xa5\xe9\xf4\x1b\x00\x00\xff\xff\x07\x37\xa2\xca\x5f\x03\x00\x00")

func mysql_000001_gokins_down_sql() ([]byte, error) {
	return bindata_read(
		_mysql_000001_gokins_down_sql,
		"mysql/000001_gokins.down.sql",
	)
}

var _mysql_000001_gokins_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6e\x1b\xc7\x15\xbe\xd7\x53\x0c\x72\x43\x0a\x90\x02\x4a\xb6\x52\xdb\x45\x80\xca\x36\xeb\xb2\x95\xa9\x42\xa6\xda\x04\x30\xb0\x1c\xee\x8e\x96\x13\xed\xce\x2e\x66\x87\x94\x05\xf4\x42\x42\x9b\xd6\xae\x5b\xd8\x6e\xd2\x38\x46\x9a\xb6\x42\x80\xb8\x05\x9c\xca\x17\xae\x60\x48\x72\xf3\x30\x11\x29\xf9\x2a\xaf\x50\xcc\xfe\x88\xcb\xfd\x9b\x59\x72\x29\xdb\x88\x79\x23\x69\xe7\xcc\xe1\xec\x39\xdf\xf9\x66\xbe\x33\xba\xb2\x52\x5d\x6c\x54\x41\x63\xf1\xf2\x52\x15\x34\x99\x02\x29\xc3\x6b\x50\x65\x8a\x0d\xd5\x75\xa8\xa3\x26\x28\x4f\x01\xd0\xc4\x5a\x13\x74\x21\x55\xdb\x90\x96\xdf\x3b\x3f\x0d\xea\xcb\x0d\x50\x5f\x5d\x5a\x9a\xe1\x83\x90\x8f\xb6\xb0\x8e\x09\x2b\xcf\x57\x06\x83\x60\x71\xb5\xb1\xac\xd4\xea\x57\x56\xaa\xd7\xab\xf5\x86\x6b\x4b\x91\x6d\x29\x51\x6f\x57\xab\x3f\x5d\x5c\x5d\x0a\x79\x24\xd0\x44\x03\x93\xb9\x4a\x25\xc1\x46\xc3\x8e\x6d\xc0\x4d\x65\xd8\x76\x7e\x61\x21\xc9\x16\x39\xea\xc0\x66\x21\xd1\x9f\x4a\x11\x64\x48\x6b\x02\x0d\x32\xc4\xb0\x89\xe2\x26\x1d\x5b\x13\x99\x68\xc8\x40\xae\x09\x0f\xc6\x5c\xe2\x52\x5c\x03\x85\x4f\xcf\x70\xf4\xcb\x95\xda\xf5\xc5\x95\x0f\xc1\x2f\xaa\x1f\x82\xb2\x1b\xe1\x19\x37\x0b\xd3\x7c\x90\x3f\x6c\xda\x3c\x8a\xe5\xd3\x80\x0e\x06\xa8\x4d\xcc\xf0\xc8\x8c\x1f\xcf\xe9\xa9\x69\x50\xad\x5f\xab\xd5\xab\xe0\x7d\x50\x23\xc4\xba\x7a\xf9\xf4\x6b\xaf\xfc\x6c\x71\xe5\x46\xb5\x01\xde\x07\x1d\xb6\x76\xc1\x6c\x9d\xff\xf1\x54\x2a\x32\xba\x88\x3a\xd8\x22\xaf\x06\x19\x3e\x2c\x8b\x81\xd0\xe9\x9b\x64\x9b\x39\x6d\x28\x04\xa3\x04\xc0\x6c\x8a\xba\x18\x6d\xa4\x43\xe3\x4d\x43\xe0\x84\x81\x66\xd1\xcd\xa2\x31\xd6\x11\xc2\xc6\xa2\xba\x18\x5b\x58\x43\x84\xe1\x35\x8c\x68\x38\xe7\x42\x10\xce\xa7\xf1\x18\x6c\x19\x09\x09\x2b\x55\x4a\xe0\xca\xf2\x75\xbe\x78\x50\xea\x7f\xbe\xdb\xbb\xff\x75\xef\xc5\x5f\xfa\x3b\x5f\x95\xe7\xbc\x9f\xbf\xa9\xf4\xbf\xf9\xaa\xf7\xfc\xf9\x74\xc9\x83\xa9\xd5\xa1\x2a\x12\xac\x48\x06\xa8\x86\xa5\x5b\x22\x46\x7d\x43\xb0\x0a\x56\x6f\xd4\xea\xd7\xc0\xe5\xc6\x4a\xb5\x3a\x1e\x2a\x5b\x1d\x6c\x68\x32\x78\xb4\xb1\x8d\x0c\x4c\xe2\x14\xe5\x82\x32\xce\x0a\x81\xb9\x4f\x46\x92\xd3\x1c\x06\x59\xc7\x89\xd0\x52\xcc\x34\x84\x9f\xbf\xff\xae\x77\xb0\x7f\xfc\xc7\xbd\xfe\xd6\xb6\x07\x17\x44\xa9\x45\x23\x50\xc8\x70\xf0\xf2\xd3\x47\x27\xbb\xbb\x47\xdf\xee\xf4\xb7\x77\x7d\x07\x5d\x44\x98\xfc\x0a\x8e\xf6\xef\x1e\x1d\xec\x95\x82\xd5\xd3\x21\x68\x94\xb3\xe7\xf6\x0e\xb7\x7a\x8f\xef\xf6\x1f\xee\xbd\x7c\xf8\xcc\xf3\xb0\x86\x09\x76\xda\x39\x5c\x1c\x1f\x7c\xd2\xff\xf2\x1f\x61\x17\x31\x08\x8b\x16\x71\xfb\x8b\xde\xc1\x7e\xd8\x43\x0c\xe1\x02\x0f\xfd\x2f\x9e\xf5\x3f\x7b\x1a\xf6\x10\xdb\x81\xdc\x6a\xcb\x7a\x8d\x3b\xb7\xfb\x7f\x7b\x52\x8a\x83\xbe\x58\xb4\xab\xa6\xa6\x70\x54\xca\x00\x5e\xa7\x56\xc7\x96\x84\xad\x5b\x45\xd2\x10\x47\xb2\x6e\xa3\xd5\xb0\x90\x94\x07\x8f\x91\x3b\xa6\xcf\x36\x73\x69\x26\xaa\xa5\x21\xb1\x0d\x61\x2e\xfa\x19\xba\xc5\x32\x58\x31\x11\x10\x39\x4a\x20\x0f\xd6\x27\x8d\x09\x87\x49\xea\x81\xfc\x94\x16\x2a\x91\xff\x6e\xf7\x9f\x3e\x3b\xde\xff\x16\x6b\xa5\x11\x10\xf3\xca\x49\x31\x41\x8d\x64\x51\xca\xfd\x3f\xf7\xbe\x79\x58\x12\xe9\x99\x71\x10\xf4\x03\x20\x51\xc7\xa2\x4c\x54\xb0\x3e\x78\xc5\x61\x9d\x6c\x05\x21\x5b\xa6\x80\x72\x62\x3e\x22\x87\x84\xa8\x8f\x96\x58\x6e\xe4\x15\x5a\xe0\x5e\x50\xe4\xf0\x3e\x6e\x75\x8f\x7e\x62\x41\xb7\x30\x53\x04\x3b\x43\x88\x17\xb6\xb6\x7a\x7f\xd8\x3f\xfe\xe7\x64\x58\x45\xb4\xee\x30\xab\xbc\x25\x89\x02\x4e\x5a\x3c\x81\x58\x27\x16\x95\x38\x17\x98\x26\x24\x9a\x13\x3d\x18\x6c\x40\xcc\x9c\x26\xf8\xc8\xb1\x48\x08\xd0\x62\xde\x9a\x24\x1b\x31\x8a\x75\x9d\x4b\xd8\xb3\xd6\xd8\x6c\xd3\x46\x4e\x2e\xe5\x2c\xd3\x74\x49\xd6\xa9\x36\xa4\xd0\x0c\x22\x1f\x1b\x45\x24\x59\x7a\x17\x2b\x73\xc5\x9d\x94\x8e\xd7\xcb\xe3\x3f\xc6\x6c\x9e\xf8\x49\x55\x68\xa7\xf0\x06\x1d\xcb\x4a\xec\xa0\x6e\x4e\x1e\x7f\xdd\xbb\xf7\xa0\xf7\xe8\x5f\xb5\xab\xa5\xd3\xdd\x22\x75\xa7\x88\xf7\x56\xc8\x9a\x95\x9e\xaf\x61\x22\x1d\xb5\x35\x21\x4e\x08\xf3\x12\xc2\xc6\x4f\x88\x89\x1c\x27\x4f\x1f\xfd\x72\xed\x5a\xad\xde\xc8\x57\x61\x59\x54\x7a\xef\xc1\xcb\xad\xed\x93\xad\x8f\xbf\x3f\xbc\xdd\xbb\xb7\x7b\xfc\xef\xfd\xef\x0f\xef\x94\xfc\x7c\x32\x43\x6e\xbf\x3f\x55\x3b\x86\x45\xf4\x61\x62\x4b\xa8\xe5\x14\x1f\xf2\xd2\xc8\x87\xc0\xf0\x17\x75\xa8\x21\xda\x41\xcf\xa8\x13\x64\x51\xfd\x6c\xb3\x99\xd6\x4a\x4c\x36\xf4\x58\xb1\x51\xfd\xa0\x91\x76\x7a\xeb\xb4\x0c\xac\x36\x41\xad\xde\x28\x47\xf7\x9d\x4a\x08\x39\x1f\x3f\xe9\x1d\x6e\xbd\x3e\x1b\x78\xb4\x57\x38\xbc\xee\x8c\x6e\xa1\xa4\x58\x4e\xc1\x0a\x37\xac\xd5\xaf\x56\x3f\xf0\x32\xe5\x93\x74\xa1\x68\x52\x38\x43\xfa\x90\xca\x43\xc8\x49\xbd\xea\xf4\x03\x7b\xae\x43\xfa\xa7\x7b\x47\x07\x7b\x47\xfb\xfb\x79\xd2\x3f\x22\xb8\xe2\x59\x48\x8b\xbf\xff\xbe\xe5\xe0\x97\x02\xb3\x10\x28\x1a\x99\xc2\x16\x1f\x70\xa4\xae\x24\x73\x5c\x5f\x9e\xea\x2d\xce\xb6\x05\x74\xe6\xd3\xda\xee\xa5\x4a\x69\xf4\xae\xfb\x64\x12\xa2\xa8\x16\x59\x0b\xd7\x86\x4c\x61\xa4\xb7\xe0\x87\xf2\x18\xde\x51\x92\x63\x09\x55\x15\x39\x8e\xc2\xac\x75\x14\x55\x0e\x31\xdb\x4d\xd3\x50\x62\x1b\xa5\xf7\x45\x0e\xa2\x12\x69\x16\x14\x42\x41\xf1\xcc\x71\x7b\x2b\x01\xf4\x8e\xd9\xe2\x0a\x22\x44\x58\x59\x5a\xbc\xff\x64\xa7\xff\xd7\xa7\x21\x2d\x1e\x55\xf3\x59\x3a\xdc\xee\x38\xed\xef\xb6\xb6\x6d\xfa\xdd\xd6\x36\xb1\x18\xf2\xf5\x6d\xf8\x6e\x56\x50\x3d\xb9\x4a\x6d\xa4\xfa\x14\x06\x2c\x59\x85\x8a\x0f\x5c\xb9\x2b\x9b\x61\xb2\x99\x52\xdd\x36\x55\x04\x79\x73\xcd\xdc\x5b\x5d\xd5\xb0\x08\x52\xc4\x95\x32\x51\x2a\xe0\x12\x6e\x84\xed\x51\xa6\x69\x92\xf3\x20\xac\x41\x06\xa3\x07\x53\x9e\x08\x67\xa4\xd3\x46\x81\x31\xe2\x14\x53\xe4\xa1\x54\x3a\x76\x36\x74\x1c\xa9\xd0\x11\xac\xae\x4b\x79\x84\x5d\xc8\xa0\xb0\x5b\x96\xf7\x5c\x62\x58\x3a\x26\xb2\x07\xc3\x26\x54\x19\xee\xa2\xb4\xfd\x71\x02\x1a\x63\x76\x16\xcc\x66\x7c\xa6\x6a\xf5\x1b\xd5\x95\x06\x3f\x55\x2d\xbb\x98\xf3\x12\x3e\xf5\xab\xc5\xa5\xd5\xea\x8d\x29\xe0\x66\x1e\x80\x77\xa0\x66\x62\xf2\xce\x8c\xfb\xc7\x9c\xf7\xa3\xa4\x5b\xeb\x98\x38\x25\xff\x2f\x34\x57\x81\x9a\x7a\xee\xe2\xf9\x8b\x2d\xb8\x70\x11\xb6\x5a\x68\xe1\x3d\x54\x59\xf8\xd1\xda\x7c\x65\xed\xc2\x85\x73\x28\xb0\x3b\xfe\xcf\xce\xf1\xfd\xdf\xf7\x1e\x7c\xee\x3f\x08\x42\x03\x40\x7d\xf9\xd7\xe5\xe9\xe8\xc3\xb9\x29\x00\xa6\xc5\xaf\x01\x40\x12\x70\x15\x2e\xf8\x9a\xfe\x3b\x64\xe2\x97\x03\xae\x6d\x11\x51\x67\x88\x6f\x2f\x26\xc4\x86\xe0\x5f\x2f\x00\x68\xb6\x30\x65\x6d\x0d\x6e\x66\x70\xaa\x4b\x85\x26\xa4\xeb\x5e\xe1\x07\xcb\x40\xd4\xf4\xab\x2e\xa5\x77\x14\x18\xb9\x72\x51\x60\xe3\x09\x00\x81\x91\x66\x6d\x90\x44\xa3\xd0\x4e\xf9\xfc\xee\xc9\x8b\x17\xbd\xdb\x7b\xbd\x4f\xb6\xfb\x5f\xfe\xf6\xe5\xa3\xfb\x7e\xfa\xe2\xfc\xcc\x13\x36\x2e\xe3\x0c\xa4\x70\x3e\x6a\x96\x56\xbd\x79\x44\x4e\x2e\x3e\x08\x62\x0a\x35\x53\xa8\x55\xa2\xa5\xe0\xcd\xa4\x1b\xe2\x89\x87\x9f\x9d\xfc\xef\xc1\x50\x1e\xbc\xb9\xe8\x16\x12\x4b\xa4\xfe\x9d\xc7\x27\x3b\x7f\xca\xc8\x62\xa2\x54\x12\x89\xd5\x21\x1b\x2b\x55\x4d\x0d\xbb\xb2\x4e\x7d\xcd\x80\x64\xf1\x55\x04\x98\x4c\x27\x02\x26\xf1\x3e\x95\xb3\x19\x36\x2c\x6b\x01\x68\x9a\xce\x84\xc0\x45\x11\xd4\x98\x29\x67\x1b\xdc\x6b\x25\x5e\x04\x54\x7c\x23\x71\xf7\x23\x7f\xff\xa3\x10\x40\x15\x92\x7a\x5f\x60\x8d\xce\x24\x61\xeb\x94\x30\x0f\x6b\xe7\xd4\x46\x25\xa7\x1c\x1b\x11\xf1\x85\xaa\x6f\x2c\x7b\x69\x1a\x3b\x02\x65\x9a\xca\x1f\x82\x62\x2a\xf5\xf4\x74\x9a\x8c\xcb\x35\x8a\x9c\xb6\x94\x2d\xba\x65\x63\x8a\x1c\x05\x93\xf4\xf8\x56\x22\xb6\xd2\xc8\x1b\xac\x44\x7a\x46\xae\x02\x74\x5f\x30\xda\x44\x76\xd1\x92\xd0\x5c\x9e\x00\xb3\x7a\x10\x2a\x07\xbf\x14\x5a\x32\x03\x2d\x0f\x69\x51\xdb\x6f\xd2\x06\x29\xab\x6a\xe5\x3a\x5e\x5c\xfd\x42\xa3\x23\x61\xe6\x1d\xb7\xa2\xb2\x22\x69\x85\x7e\xb3\x31\xeb\x1f\x67\x43\x9d\x46\xb1\x06\x1b\x33\x31\x9b\xa6\xa1\xd8\x46\x47\xc7\xa3\x72\xd9\x70\x18\x53\x62\x9d\xda\x68\x12\x77\xf6\xe4\x7b\x7b\x85\xc7\x2a\xa6\x60\x42\xc1\x0a\xc5\x2a\x1c\x88\x84\xf7\x8d\xbc\x66\xd2\x3b\xf1\x85\x45\x85\x51\xa0\x85\x9c\x76\xa0\x6f\x80\xfb\x99\x05\x0e\x43\xf6\x25\xe0\xb4\x91\x61\xfc\xc4\x69\xdf\x24\xc0\xff\xf8\xed\x9f\x3a\x34\x11\x1f\x1e\x0c\x90\xd8\x93\xe0\xce\xff\xd2\xe0\x11\xf7\x8c\xd4\xb6\x05\xb8\x5f\x0b\x6c\x58\xd4\xd0\xfc\x6f\xae\x0c\xa4\x93\xa7\x99\x5e\x69\x60\xe6\xfd\x70\xb4\x60\x76\x68\xf8\x78\x4a\x70\x86\x87\x48\xc2\xb3\x37\x39\x40\xe7\xfc\xa0\xd8\xd6\x06\xa2\x6e\x2c\xb2\xc2\x34\xb0\x4a\x09\x56\x92\x01\x49\x1d\x19\x33\x70\x49\xf4\xc4\x90\x69\x1b\x90\xa1\xb7\x04\x25\x45\x50\xa7\xe1\x3a\x33\x8a\xba\x66\x19\x90\xe8\x01\xc8\xfc\x7e\xf1\x25\x30\xf7\x6e\xe5\x26\xe9\x42\xca\xb1\xe0\xfe\xcb\x9f\x07\x0a\x0e\x3f\xa8\x23\x1f\x20\xc3\x75\xd9\xc1\x86\xe6\x3d\x27\xd1\x07\x1c\xb3\x03\x54\x49\xb2\xa0\x6e\xcd\xba\x2e\x66\xe7\x62\xe5\x3e\xf0\xcc\x3f\x88\x74\x2f\x09\x41\xac\x5b\xde\x34\x60\x42\x4c\xde\xd5\xad\x51\x17\x33\x1f\x5d\x0c\x43\x0e\xcb\xbf\x16\x3e\x0b\xcc\x76\x6f\x92\x5c\x2c\x74\x76\xf0\x08\x88\xfa\xe7\xb0\x0b\x5f\x47\x70\x7c\x04\xbb\xb0\x48\x78\x98\x5d\x02\x54\x03\x41\x12\x7f\x8c\xf9\x3b\x0e\x68\x32\xff\x02\x8b\x80\x0c\x5f\x88\x8f\x99\xd7\x14\x31\xc1\xce\x55\xb7\xcd\xd7\x11\x30\xc4\x36\x8b\xc4\x0b\xb1\xcd\xe8\xbc\xf1\xf0\x32\x58\x5f\x0c\x2e\xae\xec\x08\x4f\x94\x5e\xa1\x3f\x13\xa4\x40\xe6\xff\x01\x00\x00\xff\xff\xd8\x95\x02\xc2\x8d\x3d\x00\x00")

func mysql_000001_gokins_up_sql() ([]byte, error) {
	return bindata_read(
		_mysql_000001_gokins_up_sql,
		"mysql/000001_gokins.up.sql",
	)
}

var _sqlite_000001_gokins_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\x28\x89\x4f\x2a\xcd\xcc\x49\x49\xb0\x06\x04\x00\x00\xff\xff\xaa\x8a\x92\x63\x1f\x00\x00\x00")

func sqlite_000001_gokins_down_sql() ([]byte, error) {
	return bindata_read(
		_sqlite_000001_gokins_down_sql,
		"sqlite/000001_gokins.down.sql",
	)
}

var _sqlite_000001_gokins_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xcf\x4a\xc4\x30\x10\xc7\xf1\xfb\x3e\xc5\x1c\x15\x7c\x03\x4f\xd1\x1d\x61\x31\xbb\x4a\xc9\x82\x7b\x6a\xa2\x19\x75\xa0\xcd\x86\xcc\xb4\xcf\x2f\xc5\x3f\x28\x36\xa5\xe7\xdf\x87\x84\x2f\x73\xdb\xa0\x71\x08\xce\xdc\x58\x04\xaf\xed\xf3\xc0\x5d\xf4\x70\xb1\x01\xf0\x1c\x3d\x38\x7c\x72\x70\x78\x70\x70\x38\x5a\x0b\x8f\xcd\x6e\x6f\x9a\x13\xdc\xe3\xe9\x6a\x12\x99\x33\x75\x9c\xa8\xfd\xa1\x5b\xbc\x33\x47\xfb\xc9\xff\x92\x91\x8a\xf0\x39\x2d\x50\xd1\xa0\x83\xd4\x56\x2a\xe5\x5c\xaa\xe3\x48\x49\x6b\xa3\x72\x4f\xad\x68\xe8\xb3\x87\xad\x71\xe8\x76\x7b\x9c\x53\xda\xd1\x77\xf0\x14\xfb\x4f\xf4\x24\x12\xde\x96\x8d\x68\x28\x4a\xf1\xd7\x47\xf3\xee\x95\x13\xcb\xfb\x0a\xf8\x52\x28\xac\x79\x70\xc8\x71\x95\xfb\x3a\x43\x2d\x62\x73\x79\xfd\x11\x00\x00\xff\xff\x55\x1f\xab\xd7\x13\x02\x00\x00")

func sqlite_000001_gokins_up_sql() ([]byte, error) {
	return bindata_read(
		_sqlite_000001_gokins_up_sql,
		"sqlite/000001_gokins.up.sql",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"mysql/000001_gokins.down.sql": mysql_000001_gokins_down_sql,
	"mysql/000001_gokins.up.sql": mysql_000001_gokins_up_sql,
	"sqlite/000001_gokins.down.sql": sqlite_000001_gokins_down_sql,
	"sqlite/000001_gokins.up.sql": sqlite_000001_gokins_up_sql,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"mysql": &_bintree_t{nil, map[string]*_bintree_t{
		"000001_gokins.down.sql": &_bintree_t{mysql_000001_gokins_down_sql, map[string]*_bintree_t{
		}},
		"000001_gokins.up.sql": &_bintree_t{mysql_000001_gokins_up_sql, map[string]*_bintree_t{
		}},
	}},
	"sqlite": &_bintree_t{nil, map[string]*_bintree_t{
		"000001_gokins.down.sql": &_bintree_t{sqlite_000001_gokins_down_sql, map[string]*_bintree_t{
		}},
		"000001_gokins.up.sql": &_bintree_t{sqlite_000001_gokins_up_sql, map[string]*_bintree_t{
		}},
	}},
}}
