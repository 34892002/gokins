package comm

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _mysql_000001_gokins_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xcd\x4a\x04\x31\x0c\xc0\xf1\xbb\x4f\xd1\xf7\xd8\x93\xe2\x0a\x0b\x82\xe2\xee\xc1\x5b\x26\x76\x33\x25\x4c\xbf\x48\xd3\x81\x79\x7b\x19\x41\xf6\x96\xce\xf9\xff\xa3\x24\xe9\xeb\xd7\xc7\xa7\xbb\x3d\xbf\xbc\x9f\xdd\xe5\xcd\x9d\xbf\x2f\xd7\xdb\xd5\x4d\x0a\x28\xca\x33\x7a\x85\x8a\x7e\xc1\x40\xd3\xe9\x69\x48\x57\x92\xc6\x25\x1f\xa0\x45\x36\x43\xfd\x74\x8e\x77\xa3\xfb\x74\x87\xc8\xd9\x9a\xa9\xa9\x3d\x73\x53\xaa\x46\x56\xe1\x10\x48\xc6\x02\xa4\x5b\xfb\x26\x6a\xcd\x1e\xa4\x48\xb0\x2b\x54\xae\xd6\x03\x7b\x1e\x1c\xe3\x9f\x80\x2f\x79\x3e\xe2\x56\xb4\x56\x7f\xb0\xe1\x7f\x57\x14\x4c\x46\xef\xcd\x3c\xf2\x9e\x81\xf3\x5c\x46\xc6\xbe\xe2\x1f\x49\x6d\x48\xb4\x2c\x64\x6d\xb3\xa5\x08\x35\xf6\xc0\x23\xa4\x94\x6a\x44\xa5\xe9\xf4\x1b\x00\x00\xff\xff\x07\x37\xa2\xca\x5f\x03\x00\x00")

func mysql_000001_gokins_down_sql() ([]byte, error) {
	return bindata_read(
		_mysql_000001_gokins_down_sql,
		"mysql/000001_gokins.down.sql",
	)
}

var _mysql_000001_gokins_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6e\x1b\xc7\x15\xbe\xd7\x53\x0c\x72\x43\x0a\xb0\x02\x4a\xb6\x52\xdb\x45\x80\xca\x36\xeb\xb2\x95\xa9\x42\xa6\xda\x04\x30\xb0\x1c\xee\x8e\x96\x13\xed\xce\x2e\x66\x87\x94\x05\xf4\x42\x42\x9b\xd6\xae\x5b\xd8\x6e\xd2\x38\x46\x9a\xb6\x42\x80\xb8\x05\x9c\xca\x17\xae\x60\x48\x72\xf3\x30\x11\x29\xf9\x2a\xaf\x50\xcc\xfe\x90\xcb\xfd\x9b\x59\x72\x29\x3b\x48\x78\x43\x69\xe7\xcc\xec\xec\x39\xdf\xf9\xe6\x7c\x67\x79\x75\xb5\xba\xd4\xa8\x82\xc6\xd2\x95\xe5\x2a\x68\x32\x05\x52\x86\xd7\xa1\xca\x14\x1b\xaa\x1b\x50\x47\x4d\x50\x9e\x01\xa0\x89\xb5\x26\xe8\x42\xaa\xb6\x21\x2d\xbf\x73\x61\x16\xd4\x57\x1a\xa0\xbe\xb6\xbc\x7c\x8e\x0f\x42\x3e\xda\xc2\x3a\x26\xac\xbc\x50\x19\x0e\x82\xa5\xb5\xc6\x8a\x52\xab\x5f\x5d\xad\xde\xa8\xd6\x1b\xae\x2d\x45\xb6\xa5\x44\x57\xbb\x56\xfd\xe9\xd2\xda\x72\x68\x45\x02\x4d\x34\x34\x99\xaf\x54\x12\x6c\x34\xec\xd8\x06\xdc\x52\x46\x6d\x17\x16\x17\x93\x6c\x91\xa3\x0e\x6d\x16\x13\xd7\x53\x29\x82\x0c\x69\x4d\xa0\x41\x86\x18\x36\x51\xdc\xa4\x63\x6b\x22\x13\x0d\x19\xc8\x35\xe1\xce\x98\x4f\xdc\x8a\x6b\xa0\xf0\xe9\x19\x0b\xfd\x72\xb5\x76\x63\x69\xf5\x7d\xf0\x8b\xea\xfb\xa0\xec\x7a\xf8\x9c\x1b\x85\x59\x3e\xc8\x2f\x36\x6d\xee\xc5\xf2\xc0\xa1\xc3\x01\x6a\x13\x33\x3c\x72\xce\xf7\xe7\xec\xcc\x2c\xa8\xd6\xaf\xd7\xea\x55\xf0\x2e\xa8\x11\x62\x5d\xbb\x32\xb8\xed\xd5\x9f\x2d\xad\xde\xac\x36\xc0\xbb\xa0\xc3\xd6\x2f\x9a\xad\x0b\x3f\x9e\x49\x45\x46\x17\x51\x07\x5b\xe4\xf5\x20\xc3\x87\x65\x31\x10\x1a\x3c\x49\xb6\x99\xd3\x86\x42\x30\x4a\x00\xcc\xa6\xa8\x8b\xd1\x66\x3a\x34\x0a\x41\xa0\x18\x38\x53\xc6\x87\x45\xb7\x8a\x86\x46\x47\x18\x6d\x8b\xea\x62\x48\x60\x0d\x11\x86\xd7\x31\xa2\xe1\x50\x09\xb1\xb3\x90\x46\x3f\xb0\x65\x24\x64\x7a\xa9\x52\x02\x57\x57\x6e\xf0\xcd\x83\x52\xff\xd3\xbd\xde\x83\x2f\x7b\x2f\xff\xd2\xdf\xfd\xa2\x3c\xef\x7d\xff\xa6\xd2\xff\xea\x8b\xde\x8b\x17\xb3\x25\x0f\x5d\x56\x87\xaa\x48\xb0\x23\x19\x7c\x19\x96\x6e\x89\x88\xf0\x3b\x42\x72\x60\xed\x66\xad\x7e\x1d\x5c\x69\xac\x56\xab\x93\xa1\xb2\xd5\xc1\x86\x26\x83\x47\x1b\xdb\xc8\xc0\x24\xce\x2c\x2e\x28\xe3\xc9\x1c\x98\xfb\x1c\x22\x39\xcd\x61\x90\x75\x9c\x08\x9b\xc4\x4c\x43\xf8\xf9\xfb\xef\x7a\x87\x07\x27\x7f\xdc\xef\x6f\xef\x78\x70\x41\x94\x5a\x34\x02\x85\x8c\x05\x5e\x7d\xfc\xf8\x74\x6f\xef\xf8\xeb\xdd\xfe\xce\x9e\xbf\x40\x17\x11\x26\xbf\x83\xe3\x83\x7b\xc7\x87\xfb\xa5\x60\xf7\x74\x04\x1a\xe5\xec\xb9\xbd\xa3\xed\xde\x93\x7b\xfd\x47\xfb\xaf\x1e\x3d\xf7\x56\x58\xc7\x04\x3b\xed\x1c\x4b\x9c\x1c\x7e\xd4\xff\xfc\x1f\xe1\x25\x62\x10\x16\x6d\xe2\xce\x67\xbd\xc3\x83\xf0\x0a\x31\x84\x0b\x56\xe8\x7f\xf6\xbc\xff\xc9\xb3\xf0\x0a\xb1\x83\xc3\xcd\xb6\xac\xc7\xb8\x7b\xa7\xff\xb7\xa7\xa5\x38\xe8\x8b\x45\xbb\x6a\x6a\x0a\x47\xa5\x0c\xe0\x75\x6a\x75\x6c\x49\xd8\xba\x59\x24\x0d\x71\x24\xbb\x6c\x34\x1b\x16\x93\xe2\xe0\x31\x72\xc7\xf4\xd9\x66\x3e\xcd\x44\xb5\x34\x24\xb6\x21\xcc\x45\x3f\x43\xb7\x59\x06\x2b\x26\x02\x22\x47\x0a\xe4\xc1\xfa\xb4\x31\xe1\x30\xc9\x32\x3e\x3f\xa5\x85\x52\xe4\xbf\x3b\xfd\x67\xcf\x4f\x0e\xbe\xc6\x5a\x69\x0c\xc4\xbc\x76\x52\x4c\x10\x11\x59\x94\xf2\xe0\xcf\xbd\xaf\x1e\x95\x44\x32\x64\x12\x04\x7d\x0f\x48\xd4\xb1\x28\x13\x25\xac\x0f\x5e\xb1\x5b\xa7\x9b\x41\xc8\x96\x49\xa0\x9c\x98\x8f\xa8\x18\x21\xea\xa3\x29\x96\x1b\x79\x85\x26\xb8\xe7\x14\x39\xbc\x4f\x9a\xdd\xe3\x57\x2c\xe8\x36\x66\x8a\xe0\x64\x08\xf1\xc2\xf6\x76\xef\x0f\x07\x27\xff\x9c\x0e\xab\x88\xf6\x1d\x66\x95\x1f\x48\xa2\x80\x4a\x8b\x07\x10\xeb\xc4\xa2\x12\x75\x81\x69\x42\xa2\x39\xd1\xc2\x60\x13\x62\xe6\x34\xc1\x07\x8e\x45\x42\x80\x16\xf3\xd6\x34\xd9\x88\x51\xac\xeb\x5c\xc2\x9e\xb5\xc6\x4e\x57\x48\xe1\x7b\xb2\x2d\x1b\x39\xb9\xf4\xb5\x4c\x47\x25\x59\xcd\xda\x90\x42\x33\x88\x4f\x6c\x14\x91\x64\x81\x7e\xd6\xfd\x96\x8e\xd7\xa8\xe3\x5f\x13\xb6\x58\xfc\xd0\x2b\xb4\x53\x78\xf7\x8d\x65\x85\x7f\x98\x5d\xa7\x4f\xbe\xec\xdd\x7f\xd8\x7b\xfc\xaf\xda\xb5\xd2\x00\x14\xa9\xe7\x49\xbc\x03\x43\xd6\xad\xf4\x78\x8d\xd2\xed\xb8\x0d\x0c\x71\x40\x98\x17\x10\x36\x79\x40\x4c\xe4\x38\x79\x9a\xe4\x57\x6a\xd7\x6b\xf5\x46\xbe\x3c\xcc\x22\xdc\xfb\x0f\x5f\x6d\xef\x9c\x6e\x7f\xf8\xed\xd1\x9d\xde\xfd\xbd\x93\x7f\x1f\x7c\x7b\x74\xb7\xe4\xc7\x93\x19\x72\x55\xc1\x40\x13\x19\x16\xd1\x47\xe9\x2f\x21\x97\x53\xd6\x90\x17\x50\x3e\x04\x46\x6f\xd4\xa1\x86\xe8\x9c\x3d\xa3\x7e\x91\x45\xf5\xb3\x8d\x66\x5a\xc3\x31\xd9\xd0\x63\xc5\x46\xf5\xbd\x46\x5a\x8d\xd7\x69\x19\x58\x6d\x82\x5a\xbd\x51\x8e\x9e\x4e\x95\x10\x72\x3e\x7c\xda\x3b\xda\x7e\x73\x8e\xf9\x68\x47\x71\x74\xdf\x19\x3d\x45\x49\x49\x9d\x82\x15\x6e\x58\xab\x5f\xab\xbe\xe7\x45\xca\x27\xe9\x42\xd1\xa4\x70\x86\xf4\x21\x95\x87\x90\x93\x3a\xda\xe9\x65\x7d\xae\x52\xfe\xe3\xfd\xe3\xc3\xfd\xe3\x83\x83\x3c\xe1\x1f\x13\x5c\xf1\x28\xa4\xf9\xdf\x7f\xde\x72\xf0\x47\x81\x51\x08\x0a\x17\x99\xc4\x16\x97\x41\x52\xef\x1b\x73\xbc\x9b\x1c\x94\x55\x9c\x6d\x0b\xe8\xdf\xa7\x35\xe7\x4b\x95\xd2\xf8\xbd\xf9\xe9\x04\x44\x51\x2d\xb2\x1e\xce\x0d\x99\xc4\x90\x2b\x43\x47\x4e\x94\x64\x5f\x42\x55\x45\x8e\xa3\x30\x6b\x03\x45\xf5\x45\xcc\x76\xcb\x34\x94\xd8\x41\xe9\xdd\xc8\x41\x54\x22\xcc\x82\x44\x28\xc8\x9f\x39\x5e\xcd\x4a\x00\xbd\x63\xb6\xb8\xce\x08\x11\x56\x96\x62\xef\x3f\xdd\xed\xff\xf5\x59\x48\xb1\x47\x35\x7f\x96\x5a\xb7\x3b\x4e\xfb\x9b\xed\x1d\x9b\x7e\xb3\xbd\x43\x2c\x86\x7c\x15\x1c\x7e\xf1\x2a\xc8\x9e\x5c\xa9\x36\x56\x7e\x0a\x1d\x96\xac\x55\xc5\x05\x57\xee\xcc\x66\x98\x6c\xa5\x64\xb7\x4d\x15\x41\xdc\x5c\x33\xf7\xdd\xaf\x6a\x58\x04\x29\xe2\x4c\x99\x2a\x15\x70\x09\x37\xc6\xf1\x28\xd3\x5a\xc9\x59\x08\x6b\x90\xc1\x68\x61\xca\x03\xe1\x8c\x55\x6d\x14\xe8\x23\x4e\x31\x45\x16\xa5\xd2\xbe\xb3\xa1\xe3\x48\xb9\x8e\x60\x75\x43\x6a\x45\xd8\x85\x0c\x0a\x7b\x6a\x79\xeb\x12\xc3\xd2\x31\x91\x2d\x0c\x9b\x50\x65\xb8\x8b\xd2\xce\xc7\x29\x68\x8c\xb9\x39\x30\x97\xf1\x99\xa9\xd5\x6f\x56\x57\x1b\xbc\xaa\x5a\x71\x31\xe7\x05\x7c\xe6\x57\x4b\xcb\x6b\xd5\x9b\x33\xc0\x8d\x3c\x00\x6f\x41\xcd\xc4\xe4\xad\x73\xee\x3f\xf3\xde\x57\x49\xb7\x36\x30\x71\x4a\xfe\x7f\x68\xbe\x02\x35\xf5\xfc\xa5\x0b\x97\x5a\x70\xf1\x12\x6c\xb5\xd0\xe2\x3b\xa8\xb2\xf8\xa3\xf5\x85\xca\xfa\xc5\x8b\xe7\x51\x60\x77\xf2\x9f\xdd\x93\x07\xbf\xef\x3d\xfc\xd4\xbf\x10\xb8\x06\x80\xfa\xca\xaf\xcb\xb3\xd1\x8b\xf3\x33\x00\xcc\x8a\x1f\x03\x80\x24\xe0\x2a\x5c\xf0\x35\xfd\x67\xc8\xc4\x2f\x07\x5c\xdb\x22\xa2\xce\x10\x3f\x5e\x4c\x88\x0d\xc1\x0f\x34\x00\x68\xb6\x30\x65\x6d\x0d\x6e\x65\x70\xaa\x4b\x85\x26\xa4\x1b\x5e\xe2\x07\xdb\x40\xd4\xf4\xb3\x2e\xa5\x77\x14\x18\xb9\x72\x51\x60\xe3\x09\x80\x54\xa3\x38\xbb\x72\x77\x4f\xca\x17\x43\x21\x9b\x8f\x58\xa5\x35\x6b\x1e\x89\x92\x2b\x9b\x03\xb7\x41\xcd\x14\x2a\x8d\x28\x90\xbd\x99\x74\x53\x3c\xf1\xe8\x93\xd3\xff\x3d\xec\x7f\xfe\xdb\x57\x8f\x1f\x8c\xcc\x45\xb7\x91\x58\xe0\xf4\xef\x3e\x39\xdd\xfd\x53\xc2\x6c\xcd\xda\x24\x89\xa1\x0e\xd5\x3b\x2f\xee\x9d\xbe\x7c\xd9\xbb\xb3\xdf\xfb\x68\x67\x64\x05\x09\xa9\x24\x12\xab\x23\x36\x56\xaa\x9a\x1a\x5d\xca\x1a\xac\x75\x0e\x24\x8b\xaf\x22\xe0\x68\x3a\x11\x38\x8a\xcf\xa9\x9c\xcd\xb0\x51\x59\x0b\x40\xd3\x74\xa6\x04\x4f\x8a\xa0\xc6\x4c\x39\xdb\xe0\xed\x57\xe2\xeb\x82\x8a\x6f\x24\xee\x7e\xe4\xef\x7f\x14\x02\xa8\x42\x42\xef\x0b\xac\xf1\xb9\x28\x6c\x9d\xe2\xe6\x51\xed\x9c\xda\xa8\xe4\xa4\x65\x23\x22\x7e\xed\xea\x1b\xcb\xbe\x5a\x8d\x95\x40\x99\xa6\xf2\x45\x50\x4c\xa5\x0e\xaa\xd3\x64\x5c\xae\x53\xe4\xb4\xa5\x6c\xd1\x6d\x1b\x53\xe4\x28\x98\xa4\xfb\xb7\x12\xb1\x95\x46\xde\x70\x27\xd2\x33\x72\x25\xa0\xfb\x80\xd1\x26\xb2\x8b\x96\x84\xe6\xf2\x14\x98\xd5\x83\x50\x39\xf8\xa3\xd0\x94\x19\x6a\x79\x48\x8b\x3a\xc0\x93\x8e\x58\x59\x55\x2b\xd7\xf1\xe2\xea\x17\x1a\x1d\x09\x33\xaf\xdc\x8a\xca\x8a\xa4\x1d\xfa\xcd\xc6\xac\x9f\xd7\x86\x3a\x8d\x62\x0d\x36\x61\x60\xb6\x4c\x43\xb1\x8d\x8e\x8e\xc7\xe5\xb2\x51\x37\xa6\xf8\x3a\xb5\xd1\x24\xee\xec\xc9\xf7\xf6\x0a\xf7\x55\x4c\xc1\x84\x9c\x15\xf2\x55\xd8\x11\x09\xcf\x1b\x79\xcc\xa4\x67\xe2\x1b\x8b\x0a\xa3\x40\x0b\x39\xed\x40\xdf\x00\xf7\x33\x07\x1c\x86\xec\xcb\xc0\x69\x23\xc3\xf8\x89\xd3\xbe\x45\x80\xff\xf1\xdb\x3f\x75\x68\x22\x3e\x3c\x1c\x20\xb1\x2b\xc1\x2f\x03\x2e\x0f\x2f\xf1\x95\x91\xda\xb6\x00\x5f\xd7\x02\x9b\x16\x35\x34\xff\xce\x95\xa1\x74\xf2\x34\xd3\x6b\x75\xcc\x82\xef\x8e\x16\xcc\x76\x0d\x1f\x4f\x71\xce\xe8\x10\x49\xb8\xf6\x5d\x76\xd0\x79\xdf\x29\xb6\xb5\x89\xa8\xeb\x8b\x2c\x37\x0d\xad\x52\x9c\x95\x64\x40\x52\x47\x26\x74\x5c\x12\x3d\x31\x64\xda\x06\x64\xe8\x07\x82\x92\x22\xa8\x81\xbb\xce\x8c\xa2\xae\x5b\x06\x24\x7a\x00\x32\xbf\x5f\x7c\x19\xcc\xbf\x5d\xb9\x45\xba\x90\x72\x2c\xb8\x3f\x0c\xf4\x40\xc1\xe1\x07\x75\xe4\x03\x64\x34\x2f\x3b\xd8\xd0\xbc\xeb\x24\x7a\x81\x63\x76\x88\x2a\x49\x16\xd4\xad\x39\x77\x89\xb9\xf9\x58\xba\x0f\x57\xe6\x1f\x44\xba\x97\x85\x20\xd6\x2d\x6f\x1a\x30\x21\x26\x6f\xeb\xd6\xb8\x9b\x59\x88\x6e\x86\x21\x87\xe5\xdf\x0b\x9f\x05\xe6\xba\xb7\x48\x2e\x16\x3a\x3b\x78\x04\x44\xfd\x73\xd8\x85\x6f\x22\x38\x3e\x80\x5d\x58\x24\x3c\xcc\x2e\x01\xaa\x81\x20\x89\x5f\xc6\xfc\x19\x87\x34\x99\x7f\x83\x45\x40\x86\x6f\xc4\xc7\xcc\x1b\x8a\x98\xe0\xe4\xaa\xdb\xe6\x9b\x08\x18\x62\x9b\x45\xe2\x85\xd8\x66\x74\xde\x64\x78\x19\xee\x2f\x06\x17\x57\x76\x84\x27\x4a\xef\xd0\x9f\x09\x52\x20\xf3\xff\x00\x00\x00\xff\xff\xb4\x65\x34\x5b\x6a\x3d\x00\x00")

func mysql_000001_gokins_up_sql() ([]byte, error) {
	return bindata_read(
		_mysql_000001_gokins_up_sql,
		"mysql/000001_gokins.up.sql",
	)
}

var _sqlite_000001_gokins_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\x28\x89\x4f\x2a\xcd\xcc\x49\x49\xb0\x06\x04\x00\x00\xff\xff\xaa\x8a\x92\x63\x1f\x00\x00\x00")

func sqlite_000001_gokins_down_sql() ([]byte, error) {
	return bindata_read(
		_sqlite_000001_gokins_down_sql,
		"sqlite/000001_gokins.down.sql",
	)
}

var _sqlite_000001_gokins_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xcf\x4a\xc4\x30\x10\xc7\xf1\xfb\x3e\xc5\x1c\x15\x7c\x03\x4f\xd1\x1d\x61\x31\xbb\x4a\xc9\x82\x7b\x6a\xa2\x19\x75\xa0\xcd\x86\xcc\xb4\xcf\x2f\xc5\x3f\x28\x36\xa5\xe7\xdf\x87\x84\x2f\x73\xdb\xa0\x71\x08\xce\xdc\x58\x04\xaf\xed\xf3\xc0\x5d\xf4\x70\xb1\x01\xf0\x1c\x3d\x38\x7c\x72\x70\x78\x70\x70\x38\x5a\x0b\x8f\xcd\x6e\x6f\x9a\x13\xdc\xe3\xe9\x6a\x12\x99\x33\x75\x9c\xa8\xfd\xa1\x5b\xbc\x33\x47\xfb\xc9\xff\x92\x91\x8a\xf0\x39\x2d\x50\xd1\xa0\x83\xd4\x56\x2a\xe5\x5c\xaa\xe3\x48\x49\x6b\xa3\x72\x4f\xad\x68\xe8\xb3\x87\xad\x71\xe8\x76\x7b\x9c\x53\xda\xd1\x77\xf0\x14\xfb\x4f\xf4\x24\x12\xde\x96\x8d\x68\x28\x4a\xf1\xd7\x47\xf3\xee\x95\x13\xcb\xfb\x0a\xf8\x52\x28\xac\x79\x70\xc8\x71\x95\xfb\x3a\x43\x2d\x62\x73\x79\xfd\x11\x00\x00\xff\xff\x55\x1f\xab\xd7\x13\x02\x00\x00")

func sqlite_000001_gokins_up_sql() ([]byte, error) {
	return bindata_read(
		_sqlite_000001_gokins_up_sql,
		"sqlite/000001_gokins.up.sql",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"mysql/000001_gokins.down.sql": mysql_000001_gokins_down_sql,
	"mysql/000001_gokins.up.sql": mysql_000001_gokins_up_sql,
	"sqlite/000001_gokins.down.sql": sqlite_000001_gokins_down_sql,
	"sqlite/000001_gokins.up.sql": sqlite_000001_gokins_up_sql,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"mysql": &_bintree_t{nil, map[string]*_bintree_t{
		"000001_gokins.down.sql": &_bintree_t{mysql_000001_gokins_down_sql, map[string]*_bintree_t{
		}},
		"000001_gokins.up.sql": &_bintree_t{mysql_000001_gokins_up_sql, map[string]*_bintree_t{
		}},
	}},
	"sqlite": &_bintree_t{nil, map[string]*_bintree_t{
		"000001_gokins.down.sql": &_bintree_t{sqlite_000001_gokins_down_sql, map[string]*_bintree_t{
		}},
		"000001_gokins.up.sql": &_bintree_t{sqlite_000001_gokins_up_sql, map[string]*_bintree_t{
		}},
	}},
}}
