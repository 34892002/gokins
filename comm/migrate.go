package comm

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _mysql_000001_gokins_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\x41\xaa\xc2\x30\x10\xc6\xf1\xfd\x3b\x45\xee\xd1\xd5\x13\x2b\x14\x04\xc5\x76\xe1\x6e\x1a\xed\x18\x06\x33\x49\xc8\x24\x82\xb7\x97\x0a\x2e\x9d\xb8\xfe\xff\x98\xf0\x65\x7b\x3a\x1c\xcd\xf4\xbf\xd9\xf7\x66\xd8\x99\xfe\x3c\x8c\xd3\x68\xe6\x02\x97\x4a\x7e\x99\xbb\xbf\x6f\xfd\xca\x0b\x78\x0a\xa8\x10\x29\xd6\xe9\x1d\x93\x92\x19\x45\xf4\x03\x31\x3b\xbd\x42\xa2\xa4\x1d\x58\x73\x63\xc4\x87\xc0\xc3\xe6\x9f\x18\x66\xa1\x18\x34\x6a\xb3\x65\xa5\x57\x41\xed\xa5\x35\x03\x85\x5b\x6c\x19\xfd\x77\xde\x84\xa5\x49\x4a\xbc\xa3\xb6\xe6\xc9\x1e\x92\xaf\x8e\x5a\xa8\x20\x27\x6f\x0b\xce\xdd\x2b\x00\x00\xff\xff\x0c\xf7\x78\x5d\x73\x02\x00\x00")

func mysql_000001_gokins_down_sql() ([]byte, error) {
	return bindata_read(
		_mysql_000001_gokins_down_sql,
		"mysql/000001_gokins.down.sql",
	)
}

var _mysql_000001_gokins_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\x13\xc7\x16\x7f\xcf\xa7\x18\xf1\x62\x47\x4a\x90\x1d\x08\x17\x72\x5f\x6e\x00\x5f\xe4\x7b\x83\x53\x05\xa7\x05\x09\x69\x3d\xf6\x4e\xec\x81\xdd\xd9\xd5\xcc\xd8\x49\xde\x1c\xb5\xb4\x50\x5a\x01\x2a\x85\x22\x4a\xdb\x3c\xa1\x4a\xb4\xe1\x81\xe6\xc1\x89\xca\x87\x21\x76\x92\x27\xbe\x42\x35\xfb\x27\x5e\xef\x1f\xcf\xac\x31\x7f\xaa\xe2\x07\x48\x66\xce\x1c\x9f\xf9\x9d\xdf\x39\xf3\x9b\x81\x73\x4b\x85\xf9\x72\x01\x94\xe7\xcf\x2e\x14\x40\x85\x6b\xd5\x26\x36\xf4\x0a\xc8\x4e\x00\x50\xc1\x7a\x05\xb4\x20\xad\x35\x20\xcd\x9e\x3a\x39\x09\x4a\x8b\x65\x50\x5a\x5e\x58\x98\x12\x93\x36\xb6\x91\x81\x09\xd2\x22\x56\xcb\x0b\x0b\xe0\x7c\xe1\xbf\xf3\xcb\x0b\x71\xe6\x2d\x44\x19\xb6\x88\xe2\x32\xc6\x21\x6f\xb2\xbe\x65\x3e\x97\x8b\x31\x05\xe7\x16\x2f\x5e\x2c\x94\xca\x20\xd3\xfb\xe9\x8b\xee\x4e\x67\xff\xeb\xed\x5e\x7b\x23\xe3\x78\x40\x94\x5a\xb4\xef\x60\x56\xe2\xe0\xf0\xfe\xa3\x83\xad\xad\xbd\x97\x9b\xbd\x8d\x2d\xcf\x41\x0b\x11\xae\x1e\xc1\x5e\xe7\xf6\xde\xce\x76\xc6\x8f\x9e\x72\xa4\x57\x80\x0e\x39\xe2\xd8\x44\xd9\xe1\x6b\xbb\xbb\xed\xee\xd3\xdb\xbd\x87\xdb\x87\x0f\x5f\xb8\x1e\x56\x30\xc1\xac\x91\xc2\xc5\xfe\xce\x77\xbd\x27\x3f\x07\x5d\xd4\x28\x82\xa9\x82\xb8\xf9\xb8\xbb\xd3\x09\x7a\x68\xda\x7a\x2a\x0f\xbd\xc7\x2f\x7a\x0f\x9e\x07\x3d\x78\x49\xef\xa3\x38\x33\x3b\x3b\x7c\x1b\xb7\x6e\xf6\x7e\x7c\xe6\x2c\xfe\x64\xa9\x78\x71\x7e\xe9\x0a\xf8\x7f\xe1\x0a\xc8\x0a\x4e\x4e\x82\xe5\x4b\xc5\xd2\x05\x70\xb6\xbc\x54\x28\x4c\x4c\xfe\x7b\x22\xcc\xe1\x9a\xa9\x6b\x82\x6b\x2a\x34\xae\x53\xab\x69\x2b\x92\xd1\xa9\x0d\x65\xe2\x22\x55\xb7\x61\x8e\xcf\xc6\xa1\xeb\x58\x92\xa6\x59\x01\x98\xf0\x6c\x3e\x9f\x64\x52\xb3\x74\x24\xb7\x21\xdc\xe1\x34\x47\x6b\x3c\x30\xac\x44\x94\x14\xc4\x4e\xc3\xe0\xd1\x32\xcd\x38\xac\x2b\xa5\x39\x7d\xfb\x09\xd0\xf9\x8f\x8d\xde\xf3\x17\xfb\x9d\x97\x58\xcf\x8c\xc0\x83\xf7\xde\xc0\x08\x34\x91\x7a\xe5\x75\xef\x7e\xdb\xfd\xed\xa1\xbb\x52\xc7\xcc\x36\xe0\xba\xa6\xe2\xe1\x63\xc3\x0b\x7a\x60\x16\xe5\xb2\x32\xf4\xc8\x2b\x87\x75\x94\xba\x40\xb6\x4a\x59\xa4\x64\x72\x7d\xf0\xb4\x97\x72\x39\x5c\x38\xa9\xf9\x34\xd6\xb2\x75\x41\x51\x63\xf1\x9b\xd6\xec\xe8\x9a\x01\xad\x61\xae\x49\xba\x78\xa0\xda\xdb\xed\xee\x57\x9d\xfd\x5f\xde\x4e\xaf\x90\xc5\x1d\xec\x15\x1f\x4b\x7f\x0c\x5a\x47\x24\x10\xd7\x89\x45\x15\xce\x70\xd3\x84\x44\x67\xe1\x43\x7c\x15\x62\xce\x2a\xe0\x1a\xb3\x48\x80\xd0\xf2\x6e\x94\xbe\xc7\x98\x88\x31\xc5\xd3\x17\x8a\xd9\xb3\xc5\x0b\xc5\x52\xf9\x68\x02\xcc\x2f\x97\x17\xb5\x62\xe9\xdc\x52\x41\xc0\xe0\x82\x9f\xa2\xbc\xbb\x77\xee\x1d\xb6\x37\x0e\xda\x37\x5e\xef\xde\xec\xde\xd9\xda\xff\xb5\xf3\x7a\xf7\x96\x0b\x22\xc7\xdc\x50\xeb\x2f\x47\x4a\xc8\xb0\x48\x7d\x10\x48\xbe\x6e\x23\x25\x51\x96\x42\x36\x61\xb2\x62\x45\x32\xd6\xa4\x86\xac\x62\xa3\x09\x12\x88\x4e\x01\xa5\x3c\x59\xb4\xfe\x6e\x73\x14\x27\x3a\x12\xb7\x55\xd1\x11\xab\x55\x40\xb9\x70\xb9\x9c\x74\x06\x34\xab\x06\xae\x55\x40\xb1\x54\xce\x86\xd9\x9b\x0b\xf0\xe1\xc6\xb3\xee\x6e\xfb\xc3\x69\x03\x3a\x32\x90\xe3\xc1\x29\xbb\x70\xdc\x41\x13\x4d\xf8\x4f\x2d\x8f\x13\x18\x20\x0c\x8b\xa5\xf3\x85\xcb\x6e\xa6\xb2\xce\x9f\x2a\x1c\xd1\xc4\x59\xeb\x11\xc5\xe1\x42\x15\xd7\x45\xe8\x33\xb9\xc9\xa1\x7c\x10\x4b\xd5\x9f\x00\x52\x1d\xe0\xf7\xb7\xf7\x76\xb6\xf7\x3a\x9d\x34\x49\x1d\x91\x32\x51\x6c\x93\x50\xf5\xf6\x9b\xf5\x7f\x90\x62\xeb\x6b\x18\x95\x22\x8c\x14\x97\xac\xae\x44\x6b\x8b\x96\x54\xb2\xcc\x4a\x56\x58\xa2\xdf\xc9\x8c\xc5\xa9\xa2\x45\x7a\xa6\x33\xb5\x6e\x1a\x09\x33\xb0\x56\x43\x8c\x69\xdc\xba\x8e\xc2\x87\x62\xe4\x0b\x06\x7a\x61\x82\x09\x43\x54\x09\x84\x50\xfd\xf9\x06\x99\x5c\x66\x48\xf1\xa5\x3e\x17\x41\x52\xba\xb5\x23\x1d\x20\x4f\x3b\x69\x9a\x55\x44\x07\x4a\x6e\x98\xd2\xec\x3d\xdb\xec\x7d\xff\x3c\xa0\x34\xc3\x5a\x75\x98\xca\xb4\x9b\xac\xf1\xaa\xbd\x61\xd3\x57\xed\x0d\x62\x71\xe4\xa9\xb7\x06\x54\x66\x4a\x2a\x5a\x8d\xc4\x45\x69\x15\xc4\x6b\x2c\xf9\xf1\x1e\xdf\x48\x86\x90\x87\x63\xb2\x9e\x40\x20\x9b\x6a\x92\xbc\x39\x66\x14\xd9\x96\x56\x33\x2c\x82\x34\x39\xbb\xd3\xab\x30\x1b\x52\x68\x8e\xd0\xb6\x55\x84\x7e\x4a\x31\xa5\x43\x0e\xc3\xe2\x46\xc0\xcb\x46\x3a\xdb\xa4\x3b\x17\x8d\x60\x9c\xc2\x46\x19\x11\x1b\x32\xa6\x04\x08\xc1\xb5\xeb\x4a\x1e\x61\x0b\x72\x28\xbd\xb7\xa5\x3d\x05\x0d\xab\x8e\x89\xaa\xb8\xa8\xc0\x1a\xc7\x2d\x94\xd4\x2e\x95\xd5\xe7\xf4\x34\x98\x1e\xf2\x99\x28\x96\x2e\x15\x96\xca\xe2\x64\x5e\x74\xf8\xe1\xa6\x71\xe2\xd3\xf9\x85\xe5\xc2\xa5\x09\xe0\xe4\x13\x80\x63\x50\x37\x31\x39\x36\xe5\xfc\x92\x77\xff\xca\x38\x63\x19\xef\x17\x94\xcf\x41\xbd\x76\xe2\xcc\xc9\x33\x55\x38\x7b\x06\x56\xab\x68\xf6\x14\xca\xcd\xfe\x6b\x65\x26\xb7\x72\xfa\xf4\x09\xe4\xdb\xed\xff\xbe\xb9\x7f\xf7\xcb\xee\xbd\x1f\xbc\x01\x7f\xbf\x00\x94\x16\x3f\xcb\x4e\x86\x07\xf3\x13\x00\x28\xec\x02\x44\xda\xbe\xd8\x86\x26\xf4\x7d\xc5\xdb\xc2\x50\x52\x0a\x16\x35\x2c\x12\xe6\x5b\x38\x29\xa2\xbf\x9b\x10\x1b\x21\x21\x1d\x63\x56\xc5\x94\x37\x74\xb8\x3e\xa4\xa9\x39\xbd\xc8\x84\xf4\xba\x5b\xa3\x7e\x18\x88\x9a\x5e\x29\x85\x32\x1f\x8c\x55\x18\x39\xf7\x08\x89\x8d\xab\x21\x13\x8d\xa2\xed\xcd\x85\x3b\x16\xcc\xa3\x7b\x4b\xba\xce\xa6\x7c\x45\x49\xa3\x5d\x53\x15\x9e\x0f\x06\xd4\x4d\xa9\x04\x0d\xd3\xd3\x5d\x49\x57\xe5\x0b\x77\x1f\x1c\xfc\x79\xaf\xf7\xe4\xf3\xc3\x47\x77\x07\xd6\xa2\x35\x24\x57\xbe\xbd\x5b\x4f\x0f\x36\xbf\x19\x58\xad\xa0\x80\x65\x37\x8b\x01\x1b\x2b\x51\x24\x0f\xba\xb2\x8e\x7c\x4d\x81\x78\x4d\x9d\x4c\x11\x93\x85\x28\x22\x6f\xf3\x29\x5f\x19\x06\xef\x20\x00\x54\x4c\xf6\x96\x28\x43\x11\xd4\xb9\xa9\x66\xeb\x3f\x50\xc6\xbe\xe8\xe4\x3c\x23\xf9\x05\x34\xfd\x15\x74\x2c\x34\x19\x92\x50\xef\x92\x30\x7a\xd5\x07\xad\x13\xc0\x1b\xbc\xe8\x24\xbe\xeb\x88\xf6\x60\x23\x22\x7f\xef\xf6\x8c\x55\xdf\xb4\x23\xba\x60\xa8\xa9\xba\x32\x88\xdc\xb4\x8e\x84\x58\x3c\xdb\x56\x28\x62\x0d\x25\x5b\xb4\x66\x63\x8a\x98\x86\x49\x32\xbe\xb9\x90\xad\x32\x9f\xfa\x91\x28\xaf\x48\x55\x56\xce\x06\xc3\x6f\x6e\x0e\x5b\x62\xde\xe2\xde\x42\x17\x74\x29\x94\xf5\x7f\x50\x28\x84\xfe\x05\x12\xd2\x31\x95\x42\xdc\x09\xa5\x7a\xd7\x52\x7b\x73\x10\x77\x32\x68\x34\x15\xcc\x5c\x0d\x12\x16\xd0\x71\x11\x7a\x8f\x38\x51\x41\x1a\xfb\x82\x23\xbf\x43\x00\x10\xbd\xad\xaf\x9b\x86\x66\x1b\xcd\x3a\x1e\xb5\xeb\x0c\x62\x93\x00\x60\xe2\xe3\x88\xfc\x9d\x42\xfd\xa5\x42\x09\x80\xa8\xfe\x0e\x20\x10\x00\x20\xb8\xbb\x98\x4d\x84\x62\x8f\x0b\xd4\xf9\xb6\x90\xac\xf7\x95\x3c\x6b\xf8\xf2\x1c\x38\x9f\x69\xc0\x38\xb2\xe7\x00\x6b\x20\xc3\xf8\x0f\x6b\x5c\x25\xc0\xfb\x78\xcf\x07\x25\x68\x22\x31\xdd\x9f\x20\x91\x11\xff\x5f\x44\xe6\xfa\x43\xc2\x33\xaa\x35\x2c\x20\xfc\x5a\x60\xd5\xa2\x86\xee\x7d\x73\xae\xaf\xfc\xdd\x32\x7c\xaf\xc0\xcc\x78\x70\x54\xe1\x70\x68\xc4\x7c\x02\x38\x83\x53\x24\x66\xec\xef\x0c\xd0\x09\x0f\x14\xdb\x5a\x45\xd4\xc1\x62\x18\x4c\x7d\xab\x04\xb0\xe2\x0c\x48\xe2\xcc\x1b\x02\x17\xd7\x73\x38\x32\x6d\x03\x72\xf4\xcf\xeb\x3a\xc7\xc3\x08\xbc\xb3\xae\x73\xc1\x32\x20\xa9\xfb\xbc\xf1\x9e\x10\xe7\x40\xfe\x78\xee\x6a\x0b\x52\x91\x5d\xe7\xbf\x38\xb8\x69\x16\x84\x82\x75\xe4\xa5\x7c\xb0\xd2\x9a\xd8\xd0\xdd\x71\x12\x1e\x10\x2c\xec\xf3\x44\xb1\xaf\xd5\xad\x69\xc7\xc5\x74\x3e\x52\xc0\x7d\xcf\xe2\x83\x48\x6b\x4e\x4a\xcb\xba\xe5\x2e\x03\x26\xc4\xe4\x78\xdd\x1a\x35\x98\x99\x70\x30\x1c\x31\x9e\x3e\x16\xb1\x0a\x4c\xb7\xae\x12\x85\xbe\xf2\xee\xb9\xe1\x37\xde\xff\xc1\x16\x8c\x65\x06\x79\xbf\xd4\xb8\x06\x5b\x70\x9c\xe4\x30\x5b\x04\xd4\x0c\x04\x49\x74\x18\x8b\x3d\xf6\xdb\x5e\xfa\x00\xc7\x41\x18\x11\x88\xc7\x98\x0f\x92\x2f\xfe\x39\x54\xb2\xcd\x0f\x91\x2e\xc4\x36\xc7\xc9\x16\x62\x9b\xe1\x75\x6f\xc6\x96\x7e\x7c\x11\xb2\x38\x72\x3f\xb8\x50\x39\x42\x6f\x25\x48\x20\xcc\x5f\x01\x00\x00\xff\xff\x60\x9b\xc0\x79\xe2\x2e\x00\x00")

func mysql_000001_gokins_up_sql() ([]byte, error) {
	return bindata_read(
		_mysql_000001_gokins_up_sql,
		"mysql/000001_gokins.up.sql",
	)
}

var _sqlite_000001_gokins_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\x28\x89\x4f\x2a\xcd\xcc\x49\x49\xb0\x06\x04\x00\x00\xff\xff\xaa\x8a\x92\x63\x1f\x00\x00\x00")

func sqlite_000001_gokins_down_sql() ([]byte, error) {
	return bindata_read(
		_sqlite_000001_gokins_down_sql,
		"sqlite/000001_gokins.down.sql",
	)
}

var _sqlite_000001_gokins_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xcf\x4a\xc4\x30\x10\xc7\xf1\xfb\x3e\xc5\x1c\x15\x7c\x03\x4f\xd1\x1d\x61\x31\xbb\x4a\xc9\x82\x7b\x6a\xa2\x19\x75\xa0\xcd\x86\xcc\xb4\xcf\x2f\xc5\x3f\x28\x36\xa5\xe7\xdf\x87\x84\x2f\x73\xdb\xa0\x71\x08\xce\xdc\x58\x04\xaf\xed\xf3\xc0\x5d\xf4\x70\xb1\x01\xf0\x1c\x3d\x38\x7c\x72\x70\x78\x70\x70\x38\x5a\x0b\x8f\xcd\x6e\x6f\x9a\x13\xdc\xe3\xe9\x6a\x12\x99\x33\x75\x9c\xa8\xfd\xa1\x5b\xbc\x33\x47\xfb\xc9\xff\x92\x91\x8a\xf0\x39\x2d\x50\xd1\xa0\x83\xd4\x56\x2a\xe5\x5c\xaa\xe3\x48\x49\x6b\xa3\x72\x4f\xad\x68\xe8\xb3\x87\xad\x71\xe8\x76\x7b\x9c\x53\xda\xd1\x77\xf0\x14\xfb\x4f\xf4\x24\x12\xde\x96\x8d\x68\x28\x4a\xf1\xd7\x47\xf3\xee\x95\x13\xcb\xfb\x0a\xf8\x52\x28\xac\x79\x70\xc8\x71\x95\xfb\x3a\x43\x2d\x62\x73\x79\xfd\x11\x00\x00\xff\xff\x55\x1f\xab\xd7\x13\x02\x00\x00")

func sqlite_000001_gokins_up_sql() ([]byte, error) {
	return bindata_read(
		_sqlite_000001_gokins_up_sql,
		"sqlite/000001_gokins.up.sql",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"mysql/000001_gokins.down.sql": mysql_000001_gokins_down_sql,
	"mysql/000001_gokins.up.sql": mysql_000001_gokins_up_sql,
	"sqlite/000001_gokins.down.sql": sqlite_000001_gokins_down_sql,
	"sqlite/000001_gokins.up.sql": sqlite_000001_gokins_up_sql,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"mysql": &_bintree_t{nil, map[string]*_bintree_t{
		"000001_gokins.down.sql": &_bintree_t{mysql_000001_gokins_down_sql, map[string]*_bintree_t{
		}},
		"000001_gokins.up.sql": &_bintree_t{mysql_000001_gokins_up_sql, map[string]*_bintree_t{
		}},
	}},
	"sqlite": &_bintree_t{nil, map[string]*_bintree_t{
		"000001_gokins.down.sql": &_bintree_t{sqlite_000001_gokins_down_sql, map[string]*_bintree_t{
		}},
		"000001_gokins.up.sql": &_bintree_t{sqlite_000001_gokins_up_sql, map[string]*_bintree_t{
		}},
	}},
}}
