package comm

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _mysql_000001_gokins_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\xcd\xaa\xc2\x30\x10\x46\xf7\xf7\x29\xf2\x1e\x5d\x5d\xb1\x42\x41\x50\x6c\x17\xee\xf2\x63\x87\x1a\x9b\x64\xc2\x4c\xda\xe7\x17\x04\x97\xce\xac\xcf\x99\xf9\xce\xf1\x76\xb9\x9a\xe9\xff\x70\xee\xcd\x70\x32\xfd\x7d\x18\xa7\xd1\xb8\x66\xc3\x16\xd3\xec\xba\xbf\x5f\xfc\x91\x67\x9b\x62\x01\x41\x79\x22\xae\x02\x7e\x61\x10\x68\x06\x66\xbf\x48\xef\x6b\xac\xa0\x14\x7c\x15\xbb\x03\x71\xc4\x22\xa8\xdc\xe4\xb5\xdd\x53\xf4\x21\x89\x6b\x9e\x7c\x16\x38\xa1\x7c\x0e\x94\x59\xa9\xdc\x18\x48\xc1\x36\xf3\xa2\x29\x04\x15\x55\x47\xae\xfd\x38\x0d\x57\x28\xae\x7b\x07\x00\x00\xff\xff\x07\x1c\x99\xbc\x44\x02\x00\x00")

func mysql_000001_gokins_down_sql() ([]byte, error) {
	return bindata_read(
		_mysql_000001_gokins_down_sql,
		"mysql/000001_gokins.down.sql",
	)
}

var _mysql_000001_gokins_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\xdb\xd6\x15\x7f\xf7\xa7\xb8\x6f\xb2\x01\x0b\x20\x29\x29\xb6\xd9\x27\x37\xd1\x06\x63\xb6\x5c\x38\xf2\xd6\x3e\x51\xd7\xe2\x95\xcc\x45\xfc\x83\x7b\x2f\x0d\xfb\xcd\x46\xb7\xd6\x59\xbb\xda\xd9\x9c\xa4\x59\x97\x2d\x29\x8a\xa5\x03\xba\x3a\x18\x32\x0f\x95\xbd\xe5\xc3\xd4\xa4\xec\xa7\x7e\x85\x81\xff\x24\x52\xa2\xc4\x7b\x29\xe5\x6d\x7d\x48\x61\xe9\x9c\xc3\x1f\xcf\xf9\xdd\xf3\xef\xaa\x58\x04\xc5\x09\xff\xcd\x15\x8b\xa0\x0e\x77\x3a\x08\x10\x8a\xed\x26\xb5\x31\x02\x2d\x13\x03\xaa\xec\xd8\x5a\x47\x9d\xcb\x52\xbf\xbb\x55\x5d\xad\x57\x41\x7d\xf5\xfd\xf5\x2a\x68\x84\x5a\x0d\x30\x3f\x07\x40\x43\x53\x1b\x60\x0f\xe2\xe6\x2e\xc4\xf3\x77\xca\x0b\xa0\xb6\x59\x07\xb5\xed\xf5\xf5\x45\xef\x4b\x4b\xb3\x50\x47\x33\x90\x32\x22\xb5\xbd\xbe\x0e\xee\x55\x7f\xb6\xba\xbd\x9e\x26\xbe\x87\x30\xd1\x4c\x83\x51\x8d\x50\x48\x6d\x32\x90\x14\x05\x21\x45\x14\xdc\xdd\xdc\xd8\xa8\xd6\xea\xa0\xe0\xfe\xe5\x37\xce\x65\xb7\xf7\xbb\x0b\xf7\xf0\xa8\xe0\x5b\x40\x18\x9b\x78\x60\xa0\x92\x61\xe0\xf6\xec\xd9\xcd\xf9\xf9\xf5\xdb\x97\xee\xd1\x79\x68\x60\x0f\x19\x94\x1d\xc1\x75\xf7\xb3\xeb\xcb\x8b\x40\x95\x6a\x3a\x52\x08\x85\xba\xd5\x00\x2a\xa4\xc8\xfb\x7b\x3e\xe3\x05\x1e\xbe\xba\x79\xf9\xb9\xfb\xf4\xe2\xf6\xf1\xdb\xc8\x08\xed\xa0\xc1\xf3\xa5\x4a\x65\xb2\x81\x17\x9f\xde\x7e\xfd\x65\xa0\xaa\x23\x42\x60\x9b\x47\xd9\x77\x5f\xfc\xed\x09\x85\x98\x22\x95\x19\xbf\x73\x75\xe8\xbc\xfa\xcc\xc3\xff\xf4\x4d\x60\xa1\xa5\x19\x1a\xd9\xe5\x30\xd1\xbb\xfc\xa3\xfb\xfc\xaf\x71\x13\x4d\x8c\x20\x17\x88\xe3\xaf\x9c\xcb\x6e\xdc\x82\x6d\xa9\x5c\x16\xdc\xaf\xde\xb8\x4f\x5e\xc7\x2d\x84\xbc\x65\xf7\x65\xef\xe1\xb1\xfb\xe7\xef\x7c\xe5\x0f\xb6\xd6\x36\x56\xb7\x3e\x02\xbf\xa8\x7e\x04\xe6\xbd\x63\xb5\x00\xb6\xef\xaf\xd5\x7e\x0e\xde\xaf\x6f\x55\xab\x73\x0b\xef\x8d\x1c\xc3\xa6\xae\x2a\xde\x71\x61\x39\x89\x6d\x6c\xda\x16\xe3\x79\xf2\x8f\x37\xf3\xd9\x43\xac\x66\x87\x8f\x69\x25\xcd\xbb\xbe\xa4\x61\xeb\x0d\xa0\x19\x74\x5e\x14\xc7\x89\x34\x4d\x83\xfa\x47\x8e\xa2\x7d\x1a\xfb\x98\x89\x04\x1c\xa4\xe5\x61\x67\xbe\x28\xee\x9a\xe6\x03\x96\x08\xd2\x03\x2b\xf3\x90\x06\x2f\x66\x40\x8b\xec\x9a\xb4\x01\x3a\xa6\xd1\x4e\xfa\x67\x38\x06\x13\xcc\xe8\xa4\xcd\x24\xe7\xe1\x57\x58\xc1\x65\xbb\x87\xa1\x94\x6d\xa1\xa6\x89\x55\x02\xcc\x16\x08\xdc\xc7\xa2\x94\xaf\x3e\x7a\xf4\xe6\x2e\x8f\x9e\x12\x4b\x44\xf9\xce\x19\x6c\x27\xcb\x68\x66\x95\xfb\xd7\x91\xfb\xfa\x4d\xaf\xfb\x56\x53\x83\xe4\xa4\x6a\xc4\xea\xc0\x03\xc5\x80\x3a\x1b\x91\xf8\xcb\xf1\x84\xa7\x07\x4e\x61\xa1\xef\xf4\xd5\x7c\x5f\xa3\x4a\xd3\x54\x51\x03\xec\x68\x6d\x2f\x8f\x48\x19\xf5\xfc\xf0\xd0\xf9\xb4\xdb\x7b\x31\xab\x6e\x20\xe9\xe1\xac\x17\x70\x4e\x7f\xef\xfc\xe3\xe9\xff\x2b\xe9\xcc\x2a\xa9\x17\x40\xad\x6d\x98\x38\x16\x84\xb1\x74\x33\x6c\x7d\x07\xe1\xc9\x4c\x09\x2b\x8e\xae\x43\x43\x25\xc3\x25\x47\x45\x16\x32\x54\xa2\x78\x60\x7f\x4d\x4c\x63\xf0\x8d\xa6\x33\xf4\x55\x01\x60\x63\x4f\xc3\xa6\xa1\x23\x83\x92\x61\x2b\xc4\xc4\xb4\x0f\x4f\xcc\x5f\x77\x78\x13\x2b\x53\xea\xcb\x9d\x58\xc3\xae\x93\x3b\xb7\xf6\xbb\xd5\x7e\x7a\x8d\x07\x2e\xcc\xae\x60\x75\xbb\xbe\xa9\xac\xd5\xee\x6e\x55\x3d\x72\xf8\x6e\xdc\x9f\x98\x8a\x6d\x8e\xd4\xe6\x9c\x3c\xba\x3d\x3c\xba\x39\xfc\xed\x4f\x57\xc7\xce\xc9\x79\xef\xef\xdd\x9f\xae\x1e\x72\xb4\xe1\xc9\xfe\x65\xb4\x46\x7b\xb5\x94\xa9\x4d\xe2\x68\x76\x34\xa3\x65\x8e\x30\xd7\xc6\x9d\xac\x2c\x97\x4a\xad\xc5\xc0\x9b\x53\x33\x8c\x95\x03\xb9\x49\x66\x41\x0c\x75\x6e\x8a\xf9\x5a\xfc\x04\x63\x49\xfa\x9c\x24\x51\x21\x85\xc3\x41\xf3\xe2\x4c\x66\xd2\x88\xf2\x86\x8b\xcd\x9b\xf9\x83\x85\xb0\x4e\xbc\x9c\xcf\x1f\xb0\x48\x73\xd6\x59\xc1\x82\x38\x31\xd6\x8f\x6f\xcf\x86\x62\x3a\x21\xfa\x7b\xb0\x63\xb3\xf2\x64\x72\xa4\xef\x6e\x6f\x6d\x55\x6b\x75\xa5\xbe\xb6\x51\xbd\x5f\x5f\xdd\xf8\x60\x5e\x58\x88\x55\x8c\xd4\xf9\x49\x14\x98\x4f\xb4\x27\xb8\x56\xbb\x57\xfd\x10\x34\xd6\xee\x7d\xa8\x90\x03\x32\x70\xb4\x12\x7a\x66\x3e\x72\xd1\xf4\xe4\x62\x8e\xfe\x5a\xed\x7e\x75\xab\x0e\xd6\x6a\xf5\x4d\xdf\x4b\xb1\xf0\xcf\xfd\x72\x75\x7d\xbb\x7a\x7f\x0e\xf8\x3c\x00\x40\x5c\xf4\xff\x57\xf0\x4a\xb7\x69\x14\x82\xbf\x22\xff\x02\xaf\xef\xfb\x53\xef\xec\xdb\x42\x9a\x54\x41\x12\xc4\x95\xa2\x28\x14\xa5\x12\x10\x45\x59\x5a\x91\x4b\x52\xf8\x95\x30\x07\xc0\xc2\x7b\x3c\x38\xa4\xd0\x66\xc7\x6c\x6b\x46\xfa\xe3\x7a\xcf\x2e\x9d\xff\x3c\x2e\xa4\x09\x8e\x20\x29\x0b\xe1\x57\xa2\xc8\x0d\xa5\x14\x1a\xb5\x2d\x0b\x12\x92\x8e\xe5\xfa\xed\xf7\xee\xd9\x0f\xce\xf9\x27\x51\x47\x1c\x4a\xc8\x49\x25\x49\x90\x84\xa2\x50\x2a\x0a\x22\x90\x44\xb9\xbc\x24\x97\x23\x0f\x89\x12\x37\xae\x72\x68\x14\xaa\xba\x96\x12\x29\xe7\xf4\x0b\xe7\xe4\x75\xef\xf1\xe7\xb7\xcf\xbf\x2e\xa4\x88\x0e\x9c\xb4\x04\x04\x41\x16\x45\xb9\x14\x39\x89\x1f\x4b\x25\xb4\x89\xcd\x0e\x22\xa3\x58\x6e\x5e\xfd\xe1\xe6\xe1\x3f\x7b\xdf\xbf\xec\x9d\x7e\x52\x88\x89\xca\x1d\x8d\xd0\x24\x1e\xb1\x28\x94\x80\x58\x92\xcb\xcb\x72\x65\x39\xfc\xaa\xc4\x8d\xe7\x4e\xec\x21\x62\x21\x05\x5c\x04\xe9\xea\xc9\xcd\x7f\x1f\x25\x20\x21\x55\x1b\x07\x69\x45\x96\xc4\xfc\x3c\x5a\x8a\x3d\x45\x9a\x80\xc9\x39\x7e\x71\xfb\xec\x9b\x04\x26\x15\x75\xc6\x43\x9a\x82\x42\xcb\xa1\xd1\x36\x86\x06\x4d\x85\xd4\x3b\xfb\xd6\x3d\xfe\xb7\xfb\xc5\xb1\xfb\xfc\xe3\xe8\x33\x9b\x20\x2c\x27\x54\xfa\xa0\xca\x40\x58\x91\x2b\x92\x5c\x5e\x8a\x40\xf1\xc7\x6e\x25\xf6\x98\x14\x2e\x05\x88\x92\x5c\xf2\x11\xa5\x72\x29\x00\x24\xca\x62\x39\xfc\xaa\xcc\x8d\x27\x28\x00\xe1\x53\xf6\xdb\x85\x14\x78\x11\xa8\x04\x9b\x7c\x50\xa9\x6c\x2a\x03\x49\x90\xa5\x25\x59\xe8\x87\x2e\x4c\x90\x59\x89\x1c\x80\xf1\xbd\x40\xb8\x79\x08\x64\x32\xac\x8c\xb4\x03\xa1\x72\x23\x7c\xe5\x89\x4b\x98\x91\xc6\x6d\x7c\x3b\x06\x40\x03\x23\xcb\x64\x5b\xd8\xe4\xd8\xb7\xc4\x37\x2e\xac\xfb\x34\x00\x1a\xde\xb4\xa8\x8c\x1f\x27\x32\x3b\x41\x3f\x56\xe3\x7c\xa8\xf4\xe7\x70\x46\x5f\x32\x4c\xd3\xc3\xab\x1b\xf7\xbb\x97\xee\xe3\xd7\x21\x79\x1a\x14\x6b\xed\x36\xc2\xec\xeb\x93\x9b\x57\x7f\x73\x4e\x1e\xb9\x4f\x7e\x70\xae\x4e\x22\x23\xfe\x75\x0c\xc7\x0e\x29\xb8\x8f\xb1\x6c\xb2\xfb\xe3\xe1\x91\x85\x7f\x3c\x3c\x32\x4c\x8a\x0a\xfd\xa8\xb7\x18\x63\xb1\x83\xa1\xd1\xdc\x7d\x17\x64\xf2\x85\x39\x98\xe4\xd5\x6b\x8d\x2a\x64\x17\xf2\x29\xf4\xe7\xeb\x3e\x89\x62\xe1\x3a\x39\xbd\xee\x7e\x13\x5b\x74\xc5\x19\x9b\x87\xe5\xd3\x9c\x10\x56\xc7\x31\x2e\x92\x42\xe9\x03\xbd\x33\xf1\x2c\x71\xcc\xdc\x7d\x61\xc5\xcb\x9d\xac\x51\x18\x68\xb0\xe7\x19\xd4\x41\x3e\x24\xaa\x19\x07\x7e\xd7\x3f\x24\x2b\x44\x47\x0b\xe2\x36\xa2\x0a\x2f\x95\xe2\x6a\xec\x7c\x8a\x6b\xb1\x1f\xa0\xb8\x56\xb3\x63\x1a\x48\x49\x2c\x29\x26\xea\x4e\xbd\x38\x9e\xc1\xea\xd7\x4b\x81\x26\x65\xf6\x6c\xca\x26\x20\x8d\xf3\x58\x49\xc9\xab\xe3\x92\x04\xa7\xdb\x58\xaa\xc3\x14\x95\xdc\xeb\xbf\x72\x55\x71\x4f\x31\x51\x75\xd8\x26\xfa\xac\x99\x9e\x67\x56\xf7\x5c\xef\x35\x52\x43\x2b\x98\x29\x46\x73\xd6\x65\x1a\xbb\xd7\x13\x43\x34\xa3\xb3\x47\xda\x45\xdf\xd7\x4c\xc3\x73\x38\x32\xbb\xcf\x3f\xbe\x7d\x76\x9a\x9c\x1e\x17\xfd\xa1\x75\x71\x78\x46\x8c\xcf\xae\x25\x51\x2e\x95\x0b\x63\x7a\xd6\x54\x10\x52\xda\xac\x17\x3c\x3d\x68\x9a\x9d\x47\x5f\x26\xe6\xc1\x45\xbf\xe1\xf7\xff\x15\xfd\x7f\xa5\x45\xbf\xb7\x5d\x4c\x6f\xf1\xa3\xb9\xa3\x54\x29\x4c\x4d\x75\xff\x8a\x2e\x17\xd7\x7d\x4d\xd6\x16\x6b\x96\xb7\x72\x7c\x97\x90\xb3\xca\xb1\xd3\x5d\xcf\xcd\x28\x4b\x33\xd4\xbf\xd4\x2b\xba\x7c\x8d\xfd\xd4\xf7\x7a\x33\xb9\xd9\x9b\xc5\xdd\xde\x2c\x6e\xf7\xa6\xbc\xdf\x03\xa0\x61\x1a\x0a\xb1\x9b\x4d\x44\x48\xf6\x15\x5f\x20\xde\x82\x5a\xc7\x66\xb9\x11\x64\xbe\x72\x8b\x6e\xe5\x67\x57\x67\x87\xf3\xc2\x1e\xc4\x9a\x97\x6a\xde\xc1\x24\x3b\xb4\x86\x9e\x35\xf2\xa0\xe5\xcd\x53\xbd\x59\xaf\x51\xfc\xf5\x3c\x61\xfa\x29\x8b\x67\x55\x6b\x3e\x60\xb4\x0a\xf7\x20\x85\x99\xd9\x25\xcf\x38\xe0\x17\x48\xc5\x93\x62\x92\x9f\x59\x67\x96\xe8\x11\xbc\xc8\xe4\xe9\x11\xfc\x88\x8e\xeb\x11\x12\xe5\x19\x89\x02\x54\x9b\xa5\x95\xf2\xca\x0e\xac\xac\xc0\x9d\x1d\x54\xb9\x83\x84\xca\x52\x4b\x12\x5a\xcb\xcb\x25\xd4\x5f\x33\x0d\x15\xf0\xc1\x9b\xd7\x36\x7f\x35\xbf\x30\xf8\x70\xea\xca\xec\x8f\x53\x3a\x69\xe7\x2a\xce\x91\x72\x3e\x3a\xeb\xac\x95\x95\xe7\x06\xda\x3d\xbb\xb8\xbe\xbc\xb8\xee\x76\xf9\xb2\x7a\x7f\x4a\x80\x2a\xd5\xd9\x64\xa3\x7a\x9f\x7a\x99\x24\x0c\x0f\xa0\x93\x86\xcf\x50\x68\xb6\xf4\x4f\x8d\x95\x37\x05\xb1\x66\xcc\xf4\x1d\x4c\x52\xa6\x3f\x8c\xa7\x04\x7d\x5a\xa8\xf1\x21\x27\xfb\x39\x0d\x4f\xde\x6f\x9d\x52\x66\x92\x8e\xa6\x6b\x74\xf4\xf3\x24\xb6\xe8\x19\xac\x00\xa9\xf9\x00\x19\xf9\x98\x6f\x0f\x4b\x8f\x1b\x82\x13\xab\xce\xb1\xbf\x76\xf0\xaa\xb8\x85\x8c\xec\x5f\xc0\xf1\xd7\xc2\x64\x71\x98\x28\xca\x55\x1c\xa0\xdf\xa0\x44\x3e\x1c\x2c\xd4\x52\xcf\x64\x0b\x23\xb2\xcb\x24\x8b\xf6\x2d\x0d\x23\xa2\x68\xc6\x78\xff\x0a\x43\xb2\xcc\xa7\x6e\x80\x84\x59\x83\x2b\xf9\xf8\x2f\x98\xc2\x5e\x3b\xed\x17\x2a\x4c\x27\xeb\x7f\x01\x00\x00\xff\xff\x65\x5a\x50\x3c\xfc\x30\x00\x00")

func mysql_000001_gokins_up_sql() ([]byte, error) {
	return bindata_read(
		_mysql_000001_gokins_up_sql,
		"mysql/000001_gokins.up.sql",
	)
}

var _sqlite_000001_gokins_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\x28\x89\x4f\x2a\xcd\xcc\x49\x49\xb0\x06\x04\x00\x00\xff\xff\xaa\x8a\x92\x63\x1f\x00\x00\x00")

func sqlite_000001_gokins_down_sql() ([]byte, error) {
	return bindata_read(
		_sqlite_000001_gokins_down_sql,
		"sqlite/000001_gokins.down.sql",
	)
}

var _sqlite_000001_gokins_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xcf\x4a\xc4\x30\x10\xc7\xf1\xfb\x3e\xc5\x1c\x15\x7c\x03\x4f\xd1\x1d\x61\x31\xbb\x4a\xc9\x82\x7b\x6a\xa2\x19\x75\xa0\xcd\x86\xcc\xb4\xcf\x2f\xc5\x3f\x28\x36\xa5\xe7\xdf\x87\x84\x2f\x73\xdb\xa0\x71\x08\xce\xdc\x58\x04\xaf\xed\xf3\xc0\x5d\xf4\x70\xb1\x01\xf0\x1c\x3d\x38\x7c\x72\x70\x78\x70\x70\x38\x5a\x0b\x8f\xcd\x6e\x6f\x9a\x13\xdc\xe3\xe9\x6a\x12\x99\x33\x75\x9c\xa8\xfd\xa1\x5b\xbc\x33\x47\xfb\xc9\xff\x92\x91\x8a\xf0\x39\x2d\x50\xd1\xa0\x83\xd4\x56\x2a\xe5\x5c\xaa\xe3\x48\x49\x6b\xa3\x72\x4f\xad\x68\xe8\xb3\x87\xad\x71\xe8\x76\x7b\x9c\x53\xda\xd1\x77\xf0\x14\xfb\x4f\xf4\x24\x12\xde\x96\x8d\x68\x28\x4a\xf1\xd7\x47\xf3\xee\x95\x13\xcb\xfb\x0a\xf8\x52\x28\xac\x79\x70\xc8\x71\x95\xfb\x3a\x43\x2d\x62\x73\x79\xfd\x11\x00\x00\xff\xff\x55\x1f\xab\xd7\x13\x02\x00\x00")

func sqlite_000001_gokins_up_sql() ([]byte, error) {
	return bindata_read(
		_sqlite_000001_gokins_up_sql,
		"sqlite/000001_gokins.up.sql",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"mysql/000001_gokins.down.sql": mysql_000001_gokins_down_sql,
	"mysql/000001_gokins.up.sql": mysql_000001_gokins_up_sql,
	"sqlite/000001_gokins.down.sql": sqlite_000001_gokins_down_sql,
	"sqlite/000001_gokins.up.sql": sqlite_000001_gokins_up_sql,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"mysql": &_bintree_t{nil, map[string]*_bintree_t{
		"000001_gokins.down.sql": &_bintree_t{mysql_000001_gokins_down_sql, map[string]*_bintree_t{
		}},
		"000001_gokins.up.sql": &_bintree_t{mysql_000001_gokins_up_sql, map[string]*_bintree_t{
		}},
	}},
	"sqlite": &_bintree_t{nil, map[string]*_bintree_t{
		"000001_gokins.down.sql": &_bintree_t{sqlite_000001_gokins_down_sql, map[string]*_bintree_t{
		}},
		"000001_gokins.up.sql": &_bintree_t{sqlite_000001_gokins_up_sql, map[string]*_bintree_t{
		}},
	}},
}}
